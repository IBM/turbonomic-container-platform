apiVersion: charts.helm.k8s.io/v1
kind: Prometurbo
metadata:
  labels:
    app.kubernetes.io/name: prometurbo
    app.kubernetes.io/instance: prometurbo-sample
    app.kubernetes.io/part-of: prometurbo-deploy
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: prometurbo-deploy
  name: prometurbo-sample
spec:
  # Specify the name of the serviceaccount
  #serviceAccountName: "turbo-user"

  # Specify the name of the clusterrole
  #roleName: "prometurbo"

  # Specify the name of clusterrolebinding
  #roleBinding: "prometurbo-binding"

  # Version tag of each container that the Prometurbo pod will use
  # If the version is not provided, the operator will match the version with the tagged operator version
  image:
    prometurboTag: 8.16.4
    turbodifTag: 8.16.4

  # Turbo server version and address
  # If the version is not provided, the operator will match the version with the tagged operator version
  serverMeta:
    version: 8.16.4
    turboServer: https://<Turbo_server_URL>

  # Turbo server api user and password stored in a secret or optionally specified as username and password
  # The opsManagerUserName requires Turbo administrator role
  restAPIConfig:
    turbonomicCredentialsSecretName: "turbonomic-credentials"
    opsManagerUserName: <Turbo_username>
    opsManagerPassword: <Turbo_password>

  # Configurations to register probe with Turbo Server
  #sdkProtocolConfig:
    #  registrationTimeoutSec: 300
    #  restartOnRegistrationTimeout: false

  # Specify a UNIQUE target name
  targetName: <Cluster_name>

  # Uncomment next lines to use dynamic logging level
  # Changing this value does not require restart of Kubeturbo but takes about 1 minute to take effect
  # logging:
  #   level: 2

  # Command line arguments
  args:
    # Logging level 2 to 4
    logginglevel: 2
    # When set to true, ignore merging a commodity if a commodity of the same type already exists
    #ignoreCommodityIfPresent: false